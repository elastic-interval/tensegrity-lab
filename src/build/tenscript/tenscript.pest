library =
    { "(" ~ "library" ~ fabric_plan* ~ brick_definition* ~ ")" }

fabric_plan =
    { "(" ~ "fabric" ~ name ~ build ~ shape? ~ pretense? ~ ")" }
name =
    { "(" ~ "name" ~ string+ ~ ")" }
shape =
    { "(" ~ "shape" ~ shape_operation* ~ ")" }
basic_shape_operation =
    { space | join | vulcanize | remove_shapers | replace_faces | set_viscosity | down }
shape_operation =
    { basic_shape_operation | countdown_block }
countdown_block = // iteration-count
    { "(" ~ "countdown" ~ integer ~ basic_shape_operation+ ~ ")" }
space = // mark-name, spacing-factor
    { "(" ~ "space" ~ atom ~ float ~ ")" }
join = // mark-name
    { "(" ~ "join" ~ atom ~ ")" }
down = // mark-name
    { "(" ~ "down" ~ atom ~ ")" }
remove_shapers = // shaper-names
    { "(" ~ "remove-shapers" ~ atom* ~ ")" }
set_viscosity =
    { "(" ~ "set-viscosity" ~ float ~ ")" }
vulcanize =
    { "(" ~ "vulcanize" ~ ")" }
pretense =
    { "(" ~ "pretense" ~ surface_character ~ ")" }
surface_character =
    { ":frozen" | ":bouncy" | ":absent"  }
replace_faces =
    { "(" ~ "replace-faces" ~ ")" }
build =
    { "(" ~ "build" ~ branch ~ ")" }
build_node =
    { on_face | grow | mark | branch }
on_face =
    { "(" ~ "face" ~ face_alias ~ build_node ~ ")" }
grow =
    { "(" ~ "grow" ~ (integer | forward) ~ scale? ~ build_node? ~ ")" }
mark =
    { "(" ~ "mark" ~ atom ~ ")" }
branch =
    { "(" ~ "branch" ~ partial_alias ~ scale? ~ face_rotation* ~ on_face* ~ ")" }
face_rotation =
    { "(" ~ "rotate" ~ ")" }
scale =
    { "(" ~ "scale" ~ float ~ ")" }

brick_definition =
    { "(" ~ "brick" ~ brick_proto ~ brick_baked? ~ ")" }
partial_alias =
    { "(" ~ "alias" ~ atom ~ ")" }
brick_proto =
    { "(" ~ "proto" ~ partial_alias ~ pushes_proto+ ~ pulls_proto* ~ faces_proto+ ~ ")" }
pushes_proto = // axis, ideal
    { "(" ~ "pushes" ~ axis ~ float ~ push_proto+ ~ ")" }
axis = { axis_x | axis_y | axis_z }
axis_x = { ":x-axis" | "X" }
axis_y = { ":y-axis" | "Y" }
axis_z = { ":z-axis" | "Z" }
push_proto = // alpha, omega
    { "(" ~ "push" ~ atom ~ atom ~ ")" }
pulls_proto = // ideal
    { "(" ~ "pulls" ~ float ~ pull_proto+ ~ ")" }
pull_proto = // alpha, omega, material-name
    { "(" ~ "pull" ~ atom ~ atom ~ atom ~ ")" }
faces_proto =
    { "(" ~ "faces" ~ face_proto+ ~ ")" }
left = { "left" }
right = { "right" }
chirality = { left | right }
face_proto = // a, b, c, name
    { "(" ~ chirality ~ atom ~ atom ~ atom ~ face_alias* ~ ")" }
face_alias =
    { "(" ~ "alias" ~ atom+ ~ ")" }
brick_baked =
    { "(" ~ "baked" ~ partial_alias ~ joint_baked+ ~ interval_baked+ ~ face_baked+ ~ ")" }
joint_baked = // x, y, z
    { "(" ~ "joint" ~ float ~ float ~ float ~ ")" }
interval_baked = // alpha_index, omega_index, strain, material-name
    { "(" ~ "interval" ~ integer ~ integer ~ float ~ atom ~ ")" }
face_baked = // a, b, c, name
    { "(" ~ chirality ~ integer ~ integer ~ integer ~ face_alias* ~ ")" }

ident = @{ XID_START ~ (XID_CONTINUE | "-")* }
ident_uppercase = @{ ASCII_ALPHA_UPPER ~ (XID_CONTINUE | "-")* }
atom = @{ (":" ~ ident) | (ident_uppercase ~ (":" ~ ident_uppercase)*) }
float = @{ "-"? ~ (integer? ~ "." ~ mantissa) | integer }
integer = @{ ASCII_NONZERO_DIGIT ~ ASCII_DIGIT+ | ASCII_DIGIT }
mantissa = @{ ASCII_DIGIT+ }
string = @{ "\"" ~ (!"\"" ~ ANY)* ~ "\"" }
forward = @{ "\"" ~  ("X" | ".")+ ~ "\"" }

WHITESPACE = _{ " " | "\n" }
COMMENT = _{ ";" ~ (!NEWLINE ~ ANY)* }
